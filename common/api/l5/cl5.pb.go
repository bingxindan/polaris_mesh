// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cl5.proto

package l5

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CL5_CMD int32

const (
	// ------------------------------------------------
	CL5_CMD_CL5_SYNC_BY_AGENT_CMD        CL5_CMD = 100
	CL5_CMD_CL5_SYNC_BY_AGENT_ACK_CMD    CL5_CMD = 101
	CL5_CMD_CL5_REGISTER_BY_ID_CMD       CL5_CMD = 102
	CL5_CMD_CL5_REGISTER_BY_ID_ACK_CMD   CL5_CMD = 103
	CL5_CMD_CL5_REGISTER_BY_NAME_CMD     CL5_CMD = 104
	CL5_CMD_CL5_REGISTER_BY_NAME_ACK_CMD CL5_CMD = 105
)

var CL5_CMD_name = map[int32]string{
	100: "CL5_SYNC_BY_AGENT_CMD",
	101: "CL5_SYNC_BY_AGENT_ACK_CMD",
	102: "CL5_REGISTER_BY_ID_CMD",
	103: "CL5_REGISTER_BY_ID_ACK_CMD",
	104: "CL5_REGISTER_BY_NAME_CMD",
	105: "CL5_REGISTER_BY_NAME_ACK_CMD",
}
var CL5_CMD_value = map[string]int32{
	"CL5_SYNC_BY_AGENT_CMD":        100,
	"CL5_SYNC_BY_AGENT_ACK_CMD":    101,
	"CL5_REGISTER_BY_ID_CMD":       102,
	"CL5_REGISTER_BY_ID_ACK_CMD":   103,
	"CL5_REGISTER_BY_NAME_CMD":     104,
	"CL5_REGISTER_BY_NAME_ACK_CMD": 105,
}

func (x CL5_CMD) Enum() *CL5_CMD {
	p := new(CL5_CMD)
	*p = x
	return p
}
func (x CL5_CMD) String() string {
	return proto.EnumName(CL5_CMD_name, int32(x))
}
func (x *CL5_CMD) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CL5_CMD_value, data, "CL5_CMD")
	if err != nil {
		return err
	}
	*x = CL5_CMD(value)
	return nil
}
func (CL5_CMD) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{0}
}

// IP配置信息，用于实现就近访问。L5 server从表t_ip_config读取，由OSS从CMDB查询IP相关信息写入表中
type Cl5IpcObj struct {
	Ip                   *int32   `protobuf:"varint,1,req,name=ip" json:"ip,omitempty"`
	AreaId               *int32   `protobuf:"varint,2,req,name=area_id" json:"area_id,omitempty"`
	CityId               *int32   `protobuf:"varint,3,req,name=city_id" json:"city_id,omitempty"`
	IdcId                *int32   `protobuf:"varint,4,req,name=idc_id" json:"idc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cl5IpcObj) Reset()         { *m = Cl5IpcObj{} }
func (m *Cl5IpcObj) String() string { return proto.CompactTextString(m) }
func (*Cl5IpcObj) ProtoMessage()    {}
func (*Cl5IpcObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{0}
}
func (m *Cl5IpcObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5IpcObj.Unmarshal(m, b)
}
func (m *Cl5IpcObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5IpcObj.Marshal(b, m, deterministic)
}
func (dst *Cl5IpcObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5IpcObj.Merge(dst, src)
}
func (m *Cl5IpcObj) XXX_Size() int {
	return xxx_messageInfo_Cl5IpcObj.Size(m)
}
func (m *Cl5IpcObj) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5IpcObj.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5IpcObj proto.InternalMessageInfo

func (m *Cl5IpcObj) GetIp() int32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *Cl5IpcObj) GetAreaId() int32 {
	if m != nil && m.AreaId != nil {
		return *m.AreaId
	}
	return 0
}

func (m *Cl5IpcObj) GetCityId() int32 {
	if m != nil && m.CityId != nil {
		return *m.CityId
	}
	return 0
}

func (m *Cl5IpcObj) GetIdcId() int32 {
	if m != nil && m.IdcId != nil {
		return *m.IdcId
	}
	return 0
}

// IP配置信息列表
type Cl5IpcList struct {
	Ipc                  []*Cl5IpcObj `protobuf:"bytes,1,rep,name=ipc" json:"ipc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Cl5IpcList) Reset()         { *m = Cl5IpcList{} }
func (m *Cl5IpcList) String() string { return proto.CompactTextString(m) }
func (*Cl5IpcList) ProtoMessage()    {}
func (*Cl5IpcList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{1}
}
func (m *Cl5IpcList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5IpcList.Unmarshal(m, b)
}
func (m *Cl5IpcList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5IpcList.Marshal(b, m, deterministic)
}
func (dst *Cl5IpcList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5IpcList.Merge(dst, src)
}
func (m *Cl5IpcList) XXX_Size() int {
	return xxx_messageInfo_Cl5IpcList.Size(m)
}
func (m *Cl5IpcList) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5IpcList.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5IpcList proto.InternalMessageInfo

func (m *Cl5IpcList) GetIpc() []*Cl5IpcObj {
	if m != nil {
		return m.Ipc
	}
	return nil
}

// Sid属性
type Cl5SidObj struct {
	ModId                *int32   `protobuf:"varint,1,req,name=mod_id" json:"mod_id,omitempty"`
	CmdId                *int32   `protobuf:"varint,2,req,name=cmd_id" json:"cmd_id,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Policy               *int32   `protobuf:"varint,4,opt,name=policy" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cl5SidObj) Reset()         { *m = Cl5SidObj{} }
func (m *Cl5SidObj) String() string { return proto.CompactTextString(m) }
func (*Cl5SidObj) ProtoMessage()    {}
func (*Cl5SidObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{2}
}
func (m *Cl5SidObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5SidObj.Unmarshal(m, b)
}
func (m *Cl5SidObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5SidObj.Marshal(b, m, deterministic)
}
func (dst *Cl5SidObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5SidObj.Merge(dst, src)
}
func (m *Cl5SidObj) XXX_Size() int {
	return xxx_messageInfo_Cl5SidObj.Size(m)
}
func (m *Cl5SidObj) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5SidObj.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5SidObj proto.InternalMessageInfo

func (m *Cl5SidObj) GetModId() int32 {
	if m != nil && m.ModId != nil {
		return *m.ModId
	}
	return 0
}

func (m *Cl5SidObj) GetCmdId() int32 {
	if m != nil && m.CmdId != nil {
		return *m.CmdId
	}
	return 0
}

func (m *Cl5SidObj) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Cl5SidObj) GetPolicy() int32 {
	if m != nil && m.Policy != nil {
		return *m.Policy
	}
	return 0
}

// Sid属性列表
type Cl5SidList struct {
	Sid                  []*Cl5SidObj `protobuf:"bytes,1,rep,name=sid" json:"sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Cl5SidList) Reset()         { *m = Cl5SidList{} }
func (m *Cl5SidList) String() string { return proto.CompactTextString(m) }
func (*Cl5SidList) ProtoMessage()    {}
func (*Cl5SidList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{3}
}
func (m *Cl5SidList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5SidList.Unmarshal(m, b)
}
func (m *Cl5SidList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5SidList.Marshal(b, m, deterministic)
}
func (dst *Cl5SidList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5SidList.Merge(dst, src)
}
func (m *Cl5SidList) XXX_Size() int {
	return xxx_messageInfo_Cl5SidList.Size(m)
}
func (m *Cl5SidList) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5SidList.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5SidList proto.InternalMessageInfo

func (m *Cl5SidList) GetSid() []*Cl5SidObj {
	if m != nil {
		return m.Sid
	}
	return nil
}

// Sid
type Cl5OptObj struct {
	ModId                *int32   `protobuf:"varint,1,req,name=mod_id" json:"mod_id,omitempty"`
	CmdId                *int32   `protobuf:"varint,2,req,name=cmd_id" json:"cmd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cl5OptObj) Reset()         { *m = Cl5OptObj{} }
func (m *Cl5OptObj) String() string { return proto.CompactTextString(m) }
func (*Cl5OptObj) ProtoMessage()    {}
func (*Cl5OptObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{4}
}
func (m *Cl5OptObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5OptObj.Unmarshal(m, b)
}
func (m *Cl5OptObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5OptObj.Marshal(b, m, deterministic)
}
func (dst *Cl5OptObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5OptObj.Merge(dst, src)
}
func (m *Cl5OptObj) XXX_Size() int {
	return xxx_messageInfo_Cl5OptObj.Size(m)
}
func (m *Cl5OptObj) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5OptObj.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5OptObj proto.InternalMessageInfo

func (m *Cl5OptObj) GetModId() int32 {
	if m != nil && m.ModId != nil {
		return *m.ModId
	}
	return 0
}

func (m *Cl5OptObj) GetCmdId() int32 {
	if m != nil && m.CmdId != nil {
		return *m.CmdId
	}
	return 0
}

// Sid列表，用于CL5_SYNC_BY_AGENT_CMD请求包
type Cl5OptList struct {
	Opt                  []*Cl5OptObj `protobuf:"bytes,1,rep,name=opt" json:"opt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Cl5OptList) Reset()         { *m = Cl5OptList{} }
func (m *Cl5OptList) String() string { return proto.CompactTextString(m) }
func (*Cl5OptList) ProtoMessage()    {}
func (*Cl5OptList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{5}
}
func (m *Cl5OptList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5OptList.Unmarshal(m, b)
}
func (m *Cl5OptList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5OptList.Marshal(b, m, deterministic)
}
func (dst *Cl5OptList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5OptList.Merge(dst, src)
}
func (m *Cl5OptList) XXX_Size() int {
	return xxx_messageInfo_Cl5OptList.Size(m)
}
func (m *Cl5OptList) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5OptList.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5OptList proto.InternalMessageInfo

func (m *Cl5OptList) GetOpt() []*Cl5OptObj {
	if m != nil {
		return m.Opt
	}
	return nil
}

// Sid名字列表，用于CL5_REGISTER_BY_NAME_CMD请求包
type Cl5NameList struct {
	Name                 []string `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cl5NameList) Reset()         { *m = Cl5NameList{} }
func (m *Cl5NameList) String() string { return proto.CompactTextString(m) }
func (*Cl5NameList) ProtoMessage()    {}
func (*Cl5NameList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{6}
}
func (m *Cl5NameList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5NameList.Unmarshal(m, b)
}
func (m *Cl5NameList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5NameList.Marshal(b, m, deterministic)
}
func (dst *Cl5NameList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5NameList.Merge(dst, src)
}
func (m *Cl5NameList) XXX_Size() int {
	return xxx_messageInfo_Cl5NameList.Size(m)
}
func (m *Cl5NameList) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5NameList.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5NameList proto.InternalMessageInfo

func (m *Cl5NameList) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

// l5 server列表，用于agent实现在连接l5 server失败时重试其他l5 server
type Cl5L5SvrList struct {
	Ip                   []int32  `protobuf:"varint,1,rep,name=ip" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cl5L5SvrList) Reset()         { *m = Cl5L5SvrList{} }
func (m *Cl5L5SvrList) String() string { return proto.CompactTextString(m) }
func (*Cl5L5SvrList) ProtoMessage()    {}
func (*Cl5L5SvrList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{7}
}
func (m *Cl5L5SvrList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5L5SvrList.Unmarshal(m, b)
}
func (m *Cl5L5SvrList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5L5SvrList.Marshal(b, m, deterministic)
}
func (dst *Cl5L5SvrList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5L5SvrList.Merge(dst, src)
}
func (m *Cl5L5SvrList) XXX_Size() int {
	return xxx_messageInfo_Cl5L5SvrList.Size(m)
}
func (m *Cl5L5SvrList) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5L5SvrList.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5L5SvrList proto.InternalMessageInfo

func (m *Cl5L5SvrList) GetIp() []int32 {
	if m != nil {
		return m.Ip
	}
	return nil
}

// 被调server
type Cl5ServObj struct {
	ModId                *int32   `protobuf:"varint,1,req,name=mod_id" json:"mod_id,omitempty"`
	CmdId                *int32   `protobuf:"varint,2,req,name=cmd_id" json:"cmd_id,omitempty"`
	Ip                   *int32   `protobuf:"varint,3,req,name=ip" json:"ip,omitempty"`
	Port                 *int32   `protobuf:"varint,4,req,name=port" json:"port,omitempty"`
	Weight               *int32   `protobuf:"varint,5,req,name=weight" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cl5ServObj) Reset()         { *m = Cl5ServObj{} }
func (m *Cl5ServObj) String() string { return proto.CompactTextString(m) }
func (*Cl5ServObj) ProtoMessage()    {}
func (*Cl5ServObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{8}
}
func (m *Cl5ServObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5ServObj.Unmarshal(m, b)
}
func (m *Cl5ServObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5ServObj.Marshal(b, m, deterministic)
}
func (dst *Cl5ServObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5ServObj.Merge(dst, src)
}
func (m *Cl5ServObj) XXX_Size() int {
	return xxx_messageInfo_Cl5ServObj.Size(m)
}
func (m *Cl5ServObj) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5ServObj.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5ServObj proto.InternalMessageInfo

func (m *Cl5ServObj) GetModId() int32 {
	if m != nil && m.ModId != nil {
		return *m.ModId
	}
	return 0
}

func (m *Cl5ServObj) GetCmdId() int32 {
	if m != nil && m.CmdId != nil {
		return *m.CmdId
	}
	return 0
}

func (m *Cl5ServObj) GetIp() int32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *Cl5ServObj) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *Cl5ServObj) GetWeight() int32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

// 被调server列表
type Cl5ServList struct {
	Serv                 []*Cl5ServObj `protobuf:"bytes,1,rep,name=serv" json:"serv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Cl5ServList) Reset()         { *m = Cl5ServList{} }
func (m *Cl5ServList) String() string { return proto.CompactTextString(m) }
func (*Cl5ServList) ProtoMessage()    {}
func (*Cl5ServList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{9}
}
func (m *Cl5ServList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5ServList.Unmarshal(m, b)
}
func (m *Cl5ServList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5ServList.Marshal(b, m, deterministic)
}
func (dst *Cl5ServList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5ServList.Merge(dst, src)
}
func (m *Cl5ServList) XXX_Size() int {
	return xxx_messageInfo_Cl5ServList.Size(m)
}
func (m *Cl5ServList) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5ServList.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5ServList proto.InternalMessageInfo

func (m *Cl5ServList) GetServ() []*Cl5ServObj {
	if m != nil {
		return m.Serv
	}
	return nil
}

// 有状态规则配置
type Cl5PolyObj struct {
	ModId                *int32   `protobuf:"varint,1,req,name=mod_id" json:"mod_id,omitempty"`
	Div                  *int32   `protobuf:"varint,2,req,name=div" json:"div,omitempty"`
	Mod                  *int32   `protobuf:"varint,3,req,name=mod" json:"mod,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cl5PolyObj) Reset()         { *m = Cl5PolyObj{} }
func (m *Cl5PolyObj) String() string { return proto.CompactTextString(m) }
func (*Cl5PolyObj) ProtoMessage()    {}
func (*Cl5PolyObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{10}
}
func (m *Cl5PolyObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5PolyObj.Unmarshal(m, b)
}
func (m *Cl5PolyObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5PolyObj.Marshal(b, m, deterministic)
}
func (dst *Cl5PolyObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5PolyObj.Merge(dst, src)
}
func (m *Cl5PolyObj) XXX_Size() int {
	return xxx_messageInfo_Cl5PolyObj.Size(m)
}
func (m *Cl5PolyObj) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5PolyObj.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5PolyObj proto.InternalMessageInfo

func (m *Cl5PolyObj) GetModId() int32 {
	if m != nil && m.ModId != nil {
		return *m.ModId
	}
	return 0
}

func (m *Cl5PolyObj) GetDiv() int32 {
	if m != nil && m.Div != nil {
		return *m.Div
	}
	return 0
}

func (m *Cl5PolyObj) GetMod() int32 {
	if m != nil && m.Mod != nil {
		return *m.Mod
	}
	return 0
}

// 有状态规则分段信息
type Cl5SectObj struct {
	ModId                *int32   `protobuf:"varint,1,req,name=mod_id" json:"mod_id,omitempty"`
	From                 *int32   `protobuf:"varint,2,req,name=from" json:"from,omitempty"`
	To                   *int32   `protobuf:"varint,3,req,name=to" json:"to,omitempty"`
	CmdId                *int32   `protobuf:"varint,4,req,name=cmd_id" json:"cmd_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cl5SectObj) Reset()         { *m = Cl5SectObj{} }
func (m *Cl5SectObj) String() string { return proto.CompactTextString(m) }
func (*Cl5SectObj) ProtoMessage()    {}
func (*Cl5SectObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{11}
}
func (m *Cl5SectObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5SectObj.Unmarshal(m, b)
}
func (m *Cl5SectObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5SectObj.Marshal(b, m, deterministic)
}
func (dst *Cl5SectObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5SectObj.Merge(dst, src)
}
func (m *Cl5SectObj) XXX_Size() int {
	return xxx_messageInfo_Cl5SectObj.Size(m)
}
func (m *Cl5SectObj) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5SectObj.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5SectObj proto.InternalMessageInfo

func (m *Cl5SectObj) GetModId() int32 {
	if m != nil && m.ModId != nil {
		return *m.ModId
	}
	return 0
}

func (m *Cl5SectObj) GetFrom() int32 {
	if m != nil && m.From != nil {
		return *m.From
	}
	return 0
}

func (m *Cl5SectObj) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *Cl5SectObj) GetCmdId() int32 {
	if m != nil && m.CmdId != nil {
		return *m.CmdId
	}
	return 0
}

// 有状态规则列表
type Cl5RuleList struct {
	Poly                 []*Cl5PolyObj `protobuf:"bytes,1,rep,name=poly" json:"poly,omitempty"`
	Sect                 []*Cl5SectObj `protobuf:"bytes,2,rep,name=sect" json:"sect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Cl5RuleList) Reset()         { *m = Cl5RuleList{} }
func (m *Cl5RuleList) String() string { return proto.CompactTextString(m) }
func (*Cl5RuleList) ProtoMessage()    {}
func (*Cl5RuleList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{12}
}
func (m *Cl5RuleList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5RuleList.Unmarshal(m, b)
}
func (m *Cl5RuleList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5RuleList.Marshal(b, m, deterministic)
}
func (dst *Cl5RuleList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5RuleList.Merge(dst, src)
}
func (m *Cl5RuleList) XXX_Size() int {
	return xxx_messageInfo_Cl5RuleList.Size(m)
}
func (m *Cl5RuleList) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5RuleList.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5RuleList proto.InternalMessageInfo

func (m *Cl5RuleList) GetPoly() []*Cl5PolyObj {
	if m != nil {
		return m.Poly
	}
	return nil
}

func (m *Cl5RuleList) GetSect() []*Cl5SectObj {
	if m != nil {
		return m.Sect
	}
	return nil
}

// CL5_SYNC_BY_AGENT_CMD请求包
type Cl5SyncByAgentCmd struct {
	AgentIp              *int32      `protobuf:"varint,1,req,name=agent_ip" json:"agent_ip,omitempty"`
	SyncFlow             *int32      `protobuf:"varint,2,req,name=sync_flow" json:"sync_flow,omitempty"`
	OptList              *Cl5OptList `protobuf:"bytes,3,opt,name=opt_list" json:"opt_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Cl5SyncByAgentCmd) Reset()         { *m = Cl5SyncByAgentCmd{} }
func (m *Cl5SyncByAgentCmd) String() string { return proto.CompactTextString(m) }
func (*Cl5SyncByAgentCmd) ProtoMessage()    {}
func (*Cl5SyncByAgentCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{13}
}
func (m *Cl5SyncByAgentCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5SyncByAgentCmd.Unmarshal(m, b)
}
func (m *Cl5SyncByAgentCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5SyncByAgentCmd.Marshal(b, m, deterministic)
}
func (dst *Cl5SyncByAgentCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5SyncByAgentCmd.Merge(dst, src)
}
func (m *Cl5SyncByAgentCmd) XXX_Size() int {
	return xxx_messageInfo_Cl5SyncByAgentCmd.Size(m)
}
func (m *Cl5SyncByAgentCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5SyncByAgentCmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5SyncByAgentCmd proto.InternalMessageInfo

func (m *Cl5SyncByAgentCmd) GetAgentIp() int32 {
	if m != nil && m.AgentIp != nil {
		return *m.AgentIp
	}
	return 0
}

func (m *Cl5SyncByAgentCmd) GetSyncFlow() int32 {
	if m != nil && m.SyncFlow != nil {
		return *m.SyncFlow
	}
	return 0
}

func (m *Cl5SyncByAgentCmd) GetOptList() *Cl5OptList {
	if m != nil {
		return m.OptList
	}
	return nil
}

// CL5_SYNC_BY_AGENT_CMD应答包
type Cl5SyncByAgentAckCmd struct {
	AgentIp              *int32        `protobuf:"varint,1,req,name=agent_ip" json:"agent_ip,omitempty"`
	SyncFlow             *int32        `protobuf:"varint,2,req,name=sync_flow" json:"sync_flow,omitempty"`
	ServList             *Cl5ServList  `protobuf:"bytes,3,opt,name=serv_list" json:"serv_list,omitempty"`
	SidList              *Cl5SidList   `protobuf:"bytes,4,opt,name=sid_list" json:"sid_list,omitempty"`
	IpcList              *Cl5IpcList   `protobuf:"bytes,5,opt,name=ipc_list" json:"ipc_list,omitempty"`
	RuleList             *Cl5RuleList  `protobuf:"bytes,6,opt,name=rule_list" json:"rule_list,omitempty"`
	L5SvrList            *Cl5L5SvrList `protobuf:"bytes,7,opt,name=l5svr_list" json:"l5svr_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Cl5SyncByAgentAckCmd) Reset()         { *m = Cl5SyncByAgentAckCmd{} }
func (m *Cl5SyncByAgentAckCmd) String() string { return proto.CompactTextString(m) }
func (*Cl5SyncByAgentAckCmd) ProtoMessage()    {}
func (*Cl5SyncByAgentAckCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{14}
}
func (m *Cl5SyncByAgentAckCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5SyncByAgentAckCmd.Unmarshal(m, b)
}
func (m *Cl5SyncByAgentAckCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5SyncByAgentAckCmd.Marshal(b, m, deterministic)
}
func (dst *Cl5SyncByAgentAckCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5SyncByAgentAckCmd.Merge(dst, src)
}
func (m *Cl5SyncByAgentAckCmd) XXX_Size() int {
	return xxx_messageInfo_Cl5SyncByAgentAckCmd.Size(m)
}
func (m *Cl5SyncByAgentAckCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5SyncByAgentAckCmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5SyncByAgentAckCmd proto.InternalMessageInfo

func (m *Cl5SyncByAgentAckCmd) GetAgentIp() int32 {
	if m != nil && m.AgentIp != nil {
		return *m.AgentIp
	}
	return 0
}

func (m *Cl5SyncByAgentAckCmd) GetSyncFlow() int32 {
	if m != nil && m.SyncFlow != nil {
		return *m.SyncFlow
	}
	return 0
}

func (m *Cl5SyncByAgentAckCmd) GetServList() *Cl5ServList {
	if m != nil {
		return m.ServList
	}
	return nil
}

func (m *Cl5SyncByAgentAckCmd) GetSidList() *Cl5SidList {
	if m != nil {
		return m.SidList
	}
	return nil
}

func (m *Cl5SyncByAgentAckCmd) GetIpcList() *Cl5IpcList {
	if m != nil {
		return m.IpcList
	}
	return nil
}

func (m *Cl5SyncByAgentAckCmd) GetRuleList() *Cl5RuleList {
	if m != nil {
		return m.RuleList
	}
	return nil
}

func (m *Cl5SyncByAgentAckCmd) GetL5SvrList() *Cl5L5SvrList {
	if m != nil {
		return m.L5SvrList
	}
	return nil
}

// 已经废弃
type Cl5RegisterByIdCmd struct {
	CallerIp             *int32      `protobuf:"varint,1,req,name=caller_ip" json:"caller_ip,omitempty"`
	OptList              *Cl5OptList `protobuf:"bytes,2,opt,name=opt_list" json:"opt_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Cl5RegisterByIdCmd) Reset()         { *m = Cl5RegisterByIdCmd{} }
func (m *Cl5RegisterByIdCmd) String() string { return proto.CompactTextString(m) }
func (*Cl5RegisterByIdCmd) ProtoMessage()    {}
func (*Cl5RegisterByIdCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{15}
}
func (m *Cl5RegisterByIdCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5RegisterByIdCmd.Unmarshal(m, b)
}
func (m *Cl5RegisterByIdCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5RegisterByIdCmd.Marshal(b, m, deterministic)
}
func (dst *Cl5RegisterByIdCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5RegisterByIdCmd.Merge(dst, src)
}
func (m *Cl5RegisterByIdCmd) XXX_Size() int {
	return xxx_messageInfo_Cl5RegisterByIdCmd.Size(m)
}
func (m *Cl5RegisterByIdCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5RegisterByIdCmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5RegisterByIdCmd proto.InternalMessageInfo

func (m *Cl5RegisterByIdCmd) GetCallerIp() int32 {
	if m != nil && m.CallerIp != nil {
		return *m.CallerIp
	}
	return 0
}

func (m *Cl5RegisterByIdCmd) GetOptList() *Cl5OptList {
	if m != nil {
		return m.OptList
	}
	return nil
}

// 已经废弃
type Cl5RegisterByIdAckCmd struct {
	CallerIp             *int32       `protobuf:"varint,1,req,name=caller_ip" json:"caller_ip,omitempty"`
	ServList             *Cl5ServList `protobuf:"bytes,2,opt,name=serv_list" json:"serv_list,omitempty"`
	SidList              *Cl5SidList  `protobuf:"bytes,3,opt,name=sid_list" json:"sid_list,omitempty"`
	IpcList              *Cl5IpcList  `protobuf:"bytes,4,opt,name=ipc_list" json:"ipc_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Cl5RegisterByIdAckCmd) Reset()         { *m = Cl5RegisterByIdAckCmd{} }
func (m *Cl5RegisterByIdAckCmd) String() string { return proto.CompactTextString(m) }
func (*Cl5RegisterByIdAckCmd) ProtoMessage()    {}
func (*Cl5RegisterByIdAckCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{16}
}
func (m *Cl5RegisterByIdAckCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5RegisterByIdAckCmd.Unmarshal(m, b)
}
func (m *Cl5RegisterByIdAckCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5RegisterByIdAckCmd.Marshal(b, m, deterministic)
}
func (dst *Cl5RegisterByIdAckCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5RegisterByIdAckCmd.Merge(dst, src)
}
func (m *Cl5RegisterByIdAckCmd) XXX_Size() int {
	return xxx_messageInfo_Cl5RegisterByIdAckCmd.Size(m)
}
func (m *Cl5RegisterByIdAckCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5RegisterByIdAckCmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5RegisterByIdAckCmd proto.InternalMessageInfo

func (m *Cl5RegisterByIdAckCmd) GetCallerIp() int32 {
	if m != nil && m.CallerIp != nil {
		return *m.CallerIp
	}
	return 0
}

func (m *Cl5RegisterByIdAckCmd) GetServList() *Cl5ServList {
	if m != nil {
		return m.ServList
	}
	return nil
}

func (m *Cl5RegisterByIdAckCmd) GetSidList() *Cl5SidList {
	if m != nil {
		return m.SidList
	}
	return nil
}

func (m *Cl5RegisterByIdAckCmd) GetIpcList() *Cl5IpcList {
	if m != nil {
		return m.IpcList
	}
	return nil
}

// CL5_REGISTER_BY_NAME_CMD 请求包
type Cl5RegisterByNameCmd struct {
	CallerIp             *int32       `protobuf:"varint,1,req,name=caller_ip" json:"caller_ip,omitempty"`
	NameList             *Cl5NameList `protobuf:"bytes,2,opt,name=name_list" json:"name_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Cl5RegisterByNameCmd) Reset()         { *m = Cl5RegisterByNameCmd{} }
func (m *Cl5RegisterByNameCmd) String() string { return proto.CompactTextString(m) }
func (*Cl5RegisterByNameCmd) ProtoMessage()    {}
func (*Cl5RegisterByNameCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{17}
}
func (m *Cl5RegisterByNameCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5RegisterByNameCmd.Unmarshal(m, b)
}
func (m *Cl5RegisterByNameCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5RegisterByNameCmd.Marshal(b, m, deterministic)
}
func (dst *Cl5RegisterByNameCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5RegisterByNameCmd.Merge(dst, src)
}
func (m *Cl5RegisterByNameCmd) XXX_Size() int {
	return xxx_messageInfo_Cl5RegisterByNameCmd.Size(m)
}
func (m *Cl5RegisterByNameCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5RegisterByNameCmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5RegisterByNameCmd proto.InternalMessageInfo

func (m *Cl5RegisterByNameCmd) GetCallerIp() int32 {
	if m != nil && m.CallerIp != nil {
		return *m.CallerIp
	}
	return 0
}

func (m *Cl5RegisterByNameCmd) GetNameList() *Cl5NameList {
	if m != nil {
		return m.NameList
	}
	return nil
}

// CL5_REGISTER_BY_NAME_ACK_CMD 应答包
type Cl5RegisterByNameAckCmd struct {
	CallerIp             *int32       `protobuf:"varint,1,req,name=caller_ip" json:"caller_ip,omitempty"`
	ServList             *Cl5ServList `protobuf:"bytes,2,opt,name=serv_list" json:"serv_list,omitempty"`
	SidList              *Cl5SidList  `protobuf:"bytes,3,opt,name=sid_list" json:"sid_list,omitempty"`
	IpcList              *Cl5IpcList  `protobuf:"bytes,4,opt,name=ipc_list" json:"ipc_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Cl5RegisterByNameAckCmd) Reset()         { *m = Cl5RegisterByNameAckCmd{} }
func (m *Cl5RegisterByNameAckCmd) String() string { return proto.CompactTextString(m) }
func (*Cl5RegisterByNameAckCmd) ProtoMessage()    {}
func (*Cl5RegisterByNameAckCmd) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{18}
}
func (m *Cl5RegisterByNameAckCmd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5RegisterByNameAckCmd.Unmarshal(m, b)
}
func (m *Cl5RegisterByNameAckCmd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5RegisterByNameAckCmd.Marshal(b, m, deterministic)
}
func (dst *Cl5RegisterByNameAckCmd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5RegisterByNameAckCmd.Merge(dst, src)
}
func (m *Cl5RegisterByNameAckCmd) XXX_Size() int {
	return xxx_messageInfo_Cl5RegisterByNameAckCmd.Size(m)
}
func (m *Cl5RegisterByNameAckCmd) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5RegisterByNameAckCmd.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5RegisterByNameAckCmd proto.InternalMessageInfo

func (m *Cl5RegisterByNameAckCmd) GetCallerIp() int32 {
	if m != nil && m.CallerIp != nil {
		return *m.CallerIp
	}
	return 0
}

func (m *Cl5RegisterByNameAckCmd) GetServList() *Cl5ServList {
	if m != nil {
		return m.ServList
	}
	return nil
}

func (m *Cl5RegisterByNameAckCmd) GetSidList() *Cl5SidList {
	if m != nil {
		return m.SidList
	}
	return nil
}

func (m *Cl5RegisterByNameAckCmd) GetIpcList() *Cl5IpcList {
	if m != nil {
		return m.IpcList
	}
	return nil
}

// 包格式
type Cl5Pkg struct {
	Seqno                *int32                   `protobuf:"varint,1,req,name=seqno" json:"seqno,omitempty"`
	Cmd                  *int32                   `protobuf:"varint,2,req,name=cmd" json:"cmd,omitempty"`
	Result               *int32                   `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	Error                *string                  `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	Ip                   *int32                   `protobuf:"varint,5,opt,name=ip" json:"ip,omitempty"`
	SyncByAgentCmd       *Cl5SyncByAgentCmd       `protobuf:"bytes,10,opt,name=sync_by_agent_cmd" json:"sync_by_agent_cmd,omitempty"`
	SyncByAgentAckCmd    *Cl5SyncByAgentAckCmd    `protobuf:"bytes,11,opt,name=sync_by_agent_ack_cmd" json:"sync_by_agent_ack_cmd,omitempty"`
	RegisterByIdCmd      *Cl5RegisterByIdCmd      `protobuf:"bytes,12,opt,name=register_by_id_cmd" json:"register_by_id_cmd,omitempty"`
	RegisterByIdAckCmd   *Cl5RegisterByIdAckCmd   `protobuf:"bytes,13,opt,name=register_by_id_ack_cmd" json:"register_by_id_ack_cmd,omitempty"`
	RegisterByNameCmd    *Cl5RegisterByNameCmd    `protobuf:"bytes,14,opt,name=register_by_name_cmd" json:"register_by_name_cmd,omitempty"`
	RegisterByNameAckCmd *Cl5RegisterByNameAckCmd `protobuf:"bytes,15,opt,name=register_by_name_ack_cmd" json:"register_by_name_ack_cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Cl5Pkg) Reset()         { *m = Cl5Pkg{} }
func (m *Cl5Pkg) String() string { return proto.CompactTextString(m) }
func (*Cl5Pkg) ProtoMessage()    {}
func (*Cl5Pkg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cl5_5845103484782c18, []int{19}
}
func (m *Cl5Pkg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cl5Pkg.Unmarshal(m, b)
}
func (m *Cl5Pkg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cl5Pkg.Marshal(b, m, deterministic)
}
func (dst *Cl5Pkg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cl5Pkg.Merge(dst, src)
}
func (m *Cl5Pkg) XXX_Size() int {
	return xxx_messageInfo_Cl5Pkg.Size(m)
}
func (m *Cl5Pkg) XXX_DiscardUnknown() {
	xxx_messageInfo_Cl5Pkg.DiscardUnknown(m)
}

var xxx_messageInfo_Cl5Pkg proto.InternalMessageInfo

func (m *Cl5Pkg) GetSeqno() int32 {
	if m != nil && m.Seqno != nil {
		return *m.Seqno
	}
	return 0
}

func (m *Cl5Pkg) GetCmd() int32 {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return 0
}

func (m *Cl5Pkg) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *Cl5Pkg) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *Cl5Pkg) GetIp() int32 {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return 0
}

func (m *Cl5Pkg) GetSyncByAgentCmd() *Cl5SyncByAgentCmd {
	if m != nil {
		return m.SyncByAgentCmd
	}
	return nil
}

func (m *Cl5Pkg) GetSyncByAgentAckCmd() *Cl5SyncByAgentAckCmd {
	if m != nil {
		return m.SyncByAgentAckCmd
	}
	return nil
}

func (m *Cl5Pkg) GetRegisterByIdCmd() *Cl5RegisterByIdCmd {
	if m != nil {
		return m.RegisterByIdCmd
	}
	return nil
}

func (m *Cl5Pkg) GetRegisterByIdAckCmd() *Cl5RegisterByIdAckCmd {
	if m != nil {
		return m.RegisterByIdAckCmd
	}
	return nil
}

func (m *Cl5Pkg) GetRegisterByNameCmd() *Cl5RegisterByNameCmd {
	if m != nil {
		return m.RegisterByNameCmd
	}
	return nil
}

func (m *Cl5Pkg) GetRegisterByNameAckCmd() *Cl5RegisterByNameAckCmd {
	if m != nil {
		return m.RegisterByNameAckCmd
	}
	return nil
}

func init() {
	proto.RegisterType((*Cl5IpcObj)(nil), "l5.cl5_ipc_obj")
	proto.RegisterType((*Cl5IpcList)(nil), "l5.cl5_ipc_list")
	proto.RegisterType((*Cl5SidObj)(nil), "l5.cl5_sid_obj")
	proto.RegisterType((*Cl5SidList)(nil), "l5.cl5_sid_list")
	proto.RegisterType((*Cl5OptObj)(nil), "l5.cl5_opt_obj")
	proto.RegisterType((*Cl5OptList)(nil), "l5.cl5_opt_list")
	proto.RegisterType((*Cl5NameList)(nil), "l5.cl5_name_list")
	proto.RegisterType((*Cl5L5SvrList)(nil), "l5.cl5_l5svr_list")
	proto.RegisterType((*Cl5ServObj)(nil), "l5.cl5_serv_obj")
	proto.RegisterType((*Cl5ServList)(nil), "l5.cl5_serv_list")
	proto.RegisterType((*Cl5PolyObj)(nil), "l5.cl5_poly_obj")
	proto.RegisterType((*Cl5SectObj)(nil), "l5.cl5_sect_obj")
	proto.RegisterType((*Cl5RuleList)(nil), "l5.cl5_rule_list")
	proto.RegisterType((*Cl5SyncByAgentCmd)(nil), "l5.cl5_sync_by_agent_cmd")
	proto.RegisterType((*Cl5SyncByAgentAckCmd)(nil), "l5.cl5_sync_by_agent_ack_cmd")
	proto.RegisterType((*Cl5RegisterByIdCmd)(nil), "l5.cl5_register_by_id_cmd")
	proto.RegisterType((*Cl5RegisterByIdAckCmd)(nil), "l5.cl5_register_by_id_ack_cmd")
	proto.RegisterType((*Cl5RegisterByNameCmd)(nil), "l5.cl5_register_by_name_cmd")
	proto.RegisterType((*Cl5RegisterByNameAckCmd)(nil), "l5.cl5_register_by_name_ack_cmd")
	proto.RegisterType((*Cl5Pkg)(nil), "l5.cl5_pkg")
	proto.RegisterEnum("l5.CL5_CMD", CL5_CMD_name, CL5_CMD_value)
}

func init() { proto.RegisterFile("cl5.proto", fileDescriptor_cl5_5845103484782c18) }

var fileDescriptor_cl5_5845103484782c18 = []byte{
	// 771 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x4d, 0x6b, 0xdb, 0x40,
	0x10, 0x45, 0x96, 0xbf, 0x34, 0x76, 0x9c, 0x58, 0x34, 0x61, 0x6d, 0x9c, 0x60, 0x96, 0x50, 0x4c,
	0x69, 0x53, 0x28, 0x75, 0x29, 0xa5, 0x14, 0x12, 0xc7, 0xa4, 0x21, 0x4d, 0x02, 0x49, 0x0e, 0xcd,
	0x49, 0x75, 0x56, 0x8a, 0xb3, 0x8d, 0xec, 0x55, 0x25, 0x25, 0xc1, 0x3f, 0xa6, 0xf4, 0x8f, 0x14,
	0xfa, 0xc7, 0x7a, 0x28, 0x3b, 0xd2, 0x4a, 0xfe, 0x90, 0xc1, 0xc7, 0xde, 0xb4, 0xfb, 0x66, 0xe6,
	0xbd, 0x79, 0x9a, 0x59, 0x30, 0x98, 0xdb, 0xdd, 0xf3, 0x7c, 0x11, 0x0a, 0x33, 0xe7, 0x76, 0xe9,
	0x09, 0x54, 0x98, 0xdb, 0xb5, 0xb8, 0xc7, 0x2c, 0x71, 0xf3, 0xdd, 0x04, 0xc8, 0x71, 0x8f, 0x68,
	0xed, 0x5c, 0xa7, 0x60, 0xae, 0x43, 0x69, 0xe0, 0x3b, 0x03, 0x8b, 0xdb, 0x24, 0xa7, 0x2e, 0x18,
	0x0f, 0x27, 0xf2, 0x42, 0xc7, 0x8b, 0x1a, 0x14, 0xb9, 0xcd, 0xe4, 0x39, 0x2f, 0xcf, 0xf4, 0x25,
	0x54, 0x55, 0x31, 0x97, 0x07, 0xa1, 0xd9, 0x02, 0x9d, 0x7b, 0x8c, 0x68, 0x6d, 0xbd, 0x53, 0x79,
	0xb3, 0xbe, 0xe7, 0x76, 0xf7, 0xa6, 0xb8, 0x14, 0x75, 0xc0, 0x6d, 0xa4, 0xae, 0x41, 0x71, 0x24,
	0x6c, 0x59, 0x4c, 0x53, 0xc5, 0xd9, 0xc8, 0x4e, 0xd9, 0xab, 0x90, 0x1f, 0x0f, 0x46, 0x0e, 0xd1,
	0xdb, 0x5a, 0xc7, 0x90, 0xa8, 0x27, 0x5c, 0xce, 0x26, 0x24, 0xdf, 0xd6, 0x52, 0x6a, 0x59, 0x4c,
	0x51, 0x07, 0x58, 0x6a, 0x86, 0x3a, 0xe6, 0xa2, 0xaf, 0x22, 0x6a, 0xe1, 0x85, 0xab, 0x50, 0xab,
	0xe2, 0x32, 0x5c, 0x15, 0x17, 0x5e, 0x38, 0x5f, 0x3c, 0xae, 0x46, 0xb7, 0x61, 0x4d, 0x1e, 0xa5,
	0xd8, 0x28, 0x5c, 0x29, 0x97, 0xf1, 0x06, 0x6d, 0x41, 0x4d, 0xc2, 0x6e, 0x37, 0x78, 0xf4, 0x23,
	0x5c, 0x99, 0xae, 0x77, 0x0a, 0xf4, 0x6b, 0xdc, 0x87, 0xe3, 0x3f, 0xae, 0xe4, 0x4a, 0x94, 0xab,
	0x2b, 0x87, 0x3c, 0xe1, 0x87, 0xd1, 0xcf, 0x90, 0x91, 0x4f, 0x0e, 0x1f, 0xde, 0x85, 0xa4, 0x80,
	0x4d, 0xbc, 0x8e, 0x64, 0x61, 0x65, 0xa4, 0xdd, 0x81, 0xbc, 0x3c, 0xc4, 0x6d, 0x6c, 0x24, 0x1e,
	0xc5, 0xd4, 0xf4, 0x7d, 0x24, 0xc5, 0x13, 0xee, 0x24, 0x53, 0x4a, 0x05, 0x74, 0x9b, 0x3f, 0xc6,
	0x3a, 0x2a, 0xa0, 0x8f, 0x44, 0x3c, 0x17, 0xf4, 0xb3, 0x6a, 0x82, 0x65, 0xfb, 0x5b, 0x85, 0xfc,
	0xad, 0x2f, 0x46, 0x69, 0x0b, 0xa1, 0x48, 0x27, 0x2a, 0x6e, 0x2f, 0x9a, 0xa8, 0xf3, 0x48, 0xb4,
	0xff, 0xe0, 0x3a, 0x89, 0x68, 0x29, 0x68, 0x5e, 0x74, 0x22, 0x12, 0x9b, 0x62, 0x21, 0xc9, 0xcd,
	0x37, 0x15, 0x49, 0xa1, 0xdf, 0x60, 0x13, 0xcf, 0x93, 0x31, 0xb3, 0x6e, 0x26, 0xd6, 0x60, 0xe8,
	0x8c, 0x43, 0x8b, 0x8d, 0x6c, 0x73, 0x03, 0xca, 0xd1, 0x21, 0x99, 0xff, 0x3a, 0x18, 0x18, 0x76,
	0xeb, 0x8a, 0xa7, 0x58, 0x2a, 0x85, 0xb2, 0x1a, 0x02, 0x9c, 0xc3, 0x29, 0x06, 0x75, 0x4f, 0xff,
	0x6a, 0xd0, 0x58, 0xa4, 0x18, 0xb0, 0xfb, 0xd5, 0x69, 0x76, 0xc1, 0x48, 0x7e, 0x53, 0xcc, 0x53,
	0x9f, 0xf9, 0x3d, 0x68, 0x05, 0x85, 0xb2, 0x1a, 0x77, 0x5c, 0x82, 0xe9, 0x76, 0xd5, 0x1a, 0x50,
	0x28, 0xab, 0x6d, 0x24, 0x85, 0xd9, 0x98, 0x64, 0x4b, 0x77, 0xc1, 0x48, 0xfc, 0x25, 0xc5, 0x59,
	0xb6, 0xd4, 0xf8, 0xe7, 0x00, 0xe9, 0xc8, 0x92, 0x12, 0x86, 0x99, 0x2a, 0x2c, 0x45, 0xe8, 0x39,
	0x6c, 0x61, 0xa2, 0x33, 0xe4, 0x41, 0xe8, 0xf8, 0xd2, 0x01, 0x6e, 0x63, 0xeb, 0x75, 0x30, 0xd8,
	0xc0, 0x75, 0x1d, 0x3f, 0xed, 0x7d, 0xda, 0xcf, 0xdc, 0x12, 0x3f, 0x7f, 0x6a, 0xd0, 0xcc, 0xa8,
	0xa8, 0x0c, 0xcd, 0xa8, 0x3a, 0x63, 0x5f, 0x6e, 0x15, 0xfb, 0xf4, 0x15, 0xec, 0xcb, 0x67, 0xdb,
	0x47, 0x2f, 0x81, 0xcc, 0xcb, 0xc3, 0xd5, 0x5f, 0x2e, 0x2e, 0x79, 0x19, 0xe6, 0xc5, 0x25, 0x00,
	0xfd, 0xa5, 0x41, 0x2b, 0xb3, 0xea, 0x7f, 0xd3, 0xf6, 0x6f, 0x1d, 0x4a, 0xb8, 0x79, 0xf7, 0x43,
	0x73, 0x0d, 0x0a, 0x81, 0xf3, 0x63, 0x2c, 0xd2, 0x87, 0x81, 0x8d, 0xd4, 0x03, 0x55, 0x83, 0xa2,
	0xef, 0x04, 0x0f, 0x6e, 0xc4, 0x56, 0x90, 0xb1, 0x8e, 0xef, 0x0b, 0x1f, 0x0b, 0x1b, 0xf1, 0xfb,
	0x55, 0x40, 0xe8, 0x2d, 0xd4, 0x17, 0xf6, 0x92, 0x00, 0xf2, 0x37, 0x12, 0x8d, 0x0b, 0x8b, 0xfb,
	0x11, 0x36, 0x33, 0x57, 0x8d, 0x54, 0x30, 0x73, 0x3b, 0x3b, 0x53, 0xf9, 0xf8, 0x0e, 0xcc, 0xc5,
	0x51, 0x25, 0x55, 0x4c, 0x6d, 0x26, 0x5b, 0xb0, 0x38, 0xcc, 0x9f, 0x60, 0x2b, 0x7b, 0x20, 0xc9,
	0x1a, 0xe6, 0xee, 0x2c, 0xc9, 0x55, 0xbc, 0x1f, 0xe0, 0x59, 0xd6, 0xc4, 0x90, 0x1a, 0x66, 0xb7,
	0xb2, 0xb2, 0x93, 0xa9, 0x3a, 0x00, 0xb2, 0x6c, 0x2e, 0xc8, 0x3a, 0xe6, 0xb7, 0x97, 0xe6, 0xc7,
	0x71, 0x2f, 0xfe, 0x68, 0x50, 0xea, 0x7d, 0xe9, 0x5a, 0xbd, 0xd3, 0x43, 0xb3, 0x01, 0x9b, 0xf2,
	0xf3, 0xf2, 0xfa, 0xac, 0x67, 0x1d, 0x5c, 0x5b, 0xfb, 0x47, 0xfd, 0xb3, 0x2b, 0x09, 0x6c, 0xd8,
	0xe6, 0x36, 0x34, 0x16, 0xa1, 0xfd, 0xde, 0x09, 0xc2, 0x8e, 0xd9, 0x84, 0x2d, 0x09, 0x5f, 0xf4,
	0x8f, 0x8e, 0x2f, 0xaf, 0xfa, 0x17, 0x32, 0xe4, 0xf8, 0x10, 0xb1, 0x5b, 0x73, 0x07, 0x9a, 0x19,
	0x98, 0xca, 0x1d, 0x9a, 0x2d, 0x20, 0xf3, 0xf8, 0xd9, 0xfe, 0x69, 0x1f, 0xd1, 0x3b, 0xb3, 0x0d,
	0xad, 0x4c, 0x54, 0xe5, 0xf3, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x09, 0xe0, 0x81, 0x2c, 0xc9,
	0x08, 0x00, 0x00,
}
